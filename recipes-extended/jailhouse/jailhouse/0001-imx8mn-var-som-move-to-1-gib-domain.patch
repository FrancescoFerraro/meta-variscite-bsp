From b764b8090269ffd5c2f3e5f7fdbce00e1b86b66a Mon Sep 17 00:00:00 2001
From: Nate Drude <nate.d@variscite.com>
Date: Tue, 15 Dec 2020 16:34:57 -0600
Subject: [PATCH] imx8mn-var-som: support 1gb modules on symphony board

Move addresses to 0x40000000-0x8000000 to fit modules
with only 1GiB.

Note: See device tree imx8mn-var-som-symphony-root.dtb

Signed-off-by: Nate Drude <nate.d@variscite.com>

---
 configs/arm64/imx8mn-gic-demo.c     | 10 ++---
 configs/arm64/imx8mn-ivshmem-demo.c | 30 +++++++--------
 configs/arm64/imx8mn-linux-demo.c   | 60 +++++++++++++++--------------
 configs/arm64/imx8mn.c              | 50 ++++++++++++------------
 4 files changed, 76 insertions(+), 74 deletions(-)

diff --git a/configs/arm64/imx8mn-gic-demo.c b/configs/arm64/imx8mn-gic-demo.c
index 14dc9588..d914a063 100644
--- a/configs/arm64/imx8mn-gic-demo.c
+++ b/configs/arm64/imx8mn-gic-demo.c
@@ -30,7 +30,7 @@ struct {
 		.num_pci_devices = 0,
 
 		.console = {
-			.address = 0x30890000,
+			.address = 0x30a60000,
 			.type = JAILHOUSE_CON_TYPE_IMX,
 			.flags = JAILHOUSE_CON_ACCESS_MMIO |
 				 JAILHOUSE_CON_REGDIST_4,
@@ -42,15 +42,15 @@ struct {
 	},
 
 	.mem_regions = {
-		/* UART2 */ {
-			.phys_start = 0x30890000,
-			.virt_start = 0x30890000,
+		/* UART4 */ {
+			.phys_start = 0x30a60000,
+			.virt_start = 0x30a60000,
 			.size = 0x1000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_IO | JAILHOUSE_MEM_ROOTSHARED,
 		},
 		/* RAM: start from the bottom of inmate memory */ {
-			.phys_start = 0xb3c00000,
+			.phys_start = 0x6fc00000,
 			.virt_start = 0,
 			.size = 0x00010000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
diff --git a/configs/arm64/imx8mn-ivshmem-demo.c b/configs/arm64/imx8mn-ivshmem-demo.c
index f0bb6669..a788a958 100644
--- a/configs/arm64/imx8mn-ivshmem-demo.c
+++ b/configs/arm64/imx8mn-ivshmem-demo.c
@@ -34,7 +34,7 @@ struct {
 		.vpci_irq_base = 124, /* Not include 32 base */
 
 		.console = {
-			.address = 0x30890000,
+			.address = 0x30a60000,
 			.type = JAILHOUSE_CON_TYPE_IMX,
 			.flags = JAILHOUSE_CON_ACCESS_MMIO |
 				 JAILHOUSE_CON_REGDIST_4,
@@ -48,46 +48,46 @@ struct {
 	.mem_regions = {
 		/* IVSHMEM shared memory regions (demo) */
 		{
-			.phys_start = 0xbba00000,
-			.virt_start = 0xbba00000,
+			.phys_start = 0x7ba00000,
+			.virt_start = 0x7ba00000,
 			.size = 0x1000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_ROOTSHARED,
 		},
 		{
-			.phys_start = 0xbba01000,
-			.virt_start = 0xbba01000,
+			.phys_start = 0x7ba01000,
+			.virt_start = 0x7ba01000,
 			.size = 0x9000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_ROOTSHARED,
 		},
 		{
-			.phys_start = 0xbba0a000,
-			.virt_start = 0xbba0a000,
+			.phys_start = 0x7ba0a000,
+			.virt_start = 0x7ba0a000,
 			.size = 0x2000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_ROOTSHARED,
 		},
 		{
-			.phys_start = 0xbba0c000,
-			.virt_start = 0xbba0c000,
+			.phys_start = 0x7ba0c000,
+			.virt_start = 0x7ba0c000,
 			.size = 0x2000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_ROOTSHARED,
 		},
 		{
-			.phys_start = 0xbba0e000,
-			.virt_start = 0xbba0e000,
+			.phys_start = 0x7ba0e000,
+			.virt_start = 0x7ba0e000,
 			.size = 0x2000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_ROOTSHARED,
 		},
-		/* UART2 */ {
-			.phys_start = 0x30890000,
-			.virt_start = 0x30890000,
+		/* UART4 */ {
+			.phys_start = 0x30a60000,
+			.virt_start = 0x30a60000,
 			.size = 0x1000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_IO | JAILHOUSE_MEM_ROOTSHARED,
 		},
 		/* RAM: start from the bottom of inmate memory */ {
-			.phys_start = 0xb3c00000,
+			.phys_start = 0x6fc00000,
 			.virt_start = 0,
 			.size = 0x00010000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
diff --git a/configs/arm64/imx8mn-linux-demo.c b/configs/arm64/imx8mn-linux-demo.c
index 44fa08bc..498d3d12 100644
--- a/configs/arm64/imx8mn-linux-demo.c
+++ b/configs/arm64/imx8mn-linux-demo.c
@@ -11,9 +11,11 @@
  */
 
 /*
- * Boot 2nd Linux cmdline:
- * export PATH=$PATH:/usr/share/jailhouse/tools/
- * jailhouse cell linux imx8mn-linux-demo.cell Image -d imx8mn-ddr4-evk-inmate.dtb -c "clk_ignore_unused console=ttymxc3,115200 earlycon=ec_imx6q,0x30890000,115200  root=/dev/mmcblk2p2 rootwait rw"
+ * Boot 2nd Linux cmdline with console on J18-3 and J18-5:
+ * 1. Use recovery sd card to program emmc (install_yocto.sh)
+ * 2. Boot from emmc, with recovery sd card inserted
+ * 3. export PATH=$PATH:/usr/share/jailhouse/tools/
+ * 4. jailhouse cell linux /usr/share/jailhouse/cells/imx8mn-linux-demo.cell /boot/Image.gz -d /boot/imx8mn-var-som-inmate.dtb -c 'clk_ignore_unused console=ttymxc2,115200 earlycon=ec_imx6q,0x30a60000,115200 root=/dev/mmcblk1p1 rootwait rw'
  */
 #include <jailhouse/types.h>
 #include <jailhouse/cell-config.h>
@@ -44,62 +46,62 @@ struct {
 
 	.mem_regions = {
 		/* IVHSMEM shared memory region for 00:00.0 (demo )*/ {
-			.phys_start = 0xbba00000,
-			.virt_start = 0xbba00000,
+			.phys_start = 0x7ba00000,
+			.virt_start = 0x7ba00000,
 			.size = 0x1000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_ROOTSHARED,
 		},
 		{
-			.phys_start = 0xbba01000,
-			.virt_start = 0xbba01000,
+			.phys_start = 0x7ba01000,
+			.virt_start = 0x7ba01000,
 			.size = 0x9000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_ROOTSHARED,
 		},
 		{
-			.phys_start = 0xbba0a000,
-			.virt_start = 0xbba0a000,
+			.phys_start = 0x7ba0a000,
+			.virt_start = 0x7ba0a000,
 			.size = 0x2000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_ROOTSHARED,
 		},
 		{
-			.phys_start = 0xbba0c000,
-			.virt_start = 0xbba0c000,
+			.phys_start = 0x7ba0c000,
+			.virt_start = 0x7ba0c000,
 			.size = 0x2000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_ROOTSHARED,
 		},
 		{
-			.phys_start = 0xbba0e000,
-			.virt_start = 0xbba0e000,
+			.phys_start = 0x7ba0e000,
+			.virt_start = 0x7ba0e000,
 			.size = 0x2000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_ROOTSHARED,
 		},
 		/* IVSHMEM shared memory regions for 00:01.0 (networking) */
-		JAILHOUSE_SHMEM_NET_REGIONS(0xbbb00000, 1),
-		/* UART2 earlycon */ {
-			.phys_start = 0x30890000,
-			.virt_start = 0x30890000,
+		JAILHOUSE_SHMEM_NET_REGIONS(0x7bb00000, 1),
+		/* UART4 earlycon */ {
+			.phys_start = 0x30a60000,
+			.virt_start = 0x30a60000,
 			.size = 0x1000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_IO | JAILHOUSE_MEM_ROOTSHARED,
 		},
-		/* UART4 */ {
-			.phys_start = 0x30a60000,
-			.virt_start = 0x30a60000,
+		/* UART3 */ {
+			.phys_start = 0x30880000,
+			.virt_start = 0x30880000,
 			.size = 0x1000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_IO,
 		},
-		/* SHDC1 */ {
-			.phys_start = 0x30b60000,
-			.virt_start = 0x30b60000,
+		/* SHDC2 */ {
+			.phys_start = 0x30b50000,
+			.virt_start = 0x30b50000,
 			.size = 0x10000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_IO,
 		},
 		/* RAM: Top at 4GB Space */ {
-			.phys_start = 0xbb700000,
+			.phys_start = 0x7b700000,
 			.virt_start = 0,
 			.size = 0x10000, /* 64KB */
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
@@ -110,9 +112,9 @@ struct {
 			 * We could not use 0x80000000 which conflicts with
 			 * COMM_REGION_BASE
 			 */
-			.phys_start = 0x93c00000,
-			.virt_start = 0x93c00000,
-			.size = 0x24000000,
+			.phys_start = 0x6fc00000,
+			.virt_start = 0x6fc00000,
+			.size = 0x08000000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_EXECUTE | JAILHOUSE_MEM_DMA |
 				JAILHOUSE_MEM_LOADABLE,
@@ -126,11 +128,11 @@ struct {
 	},
 
 	.irqchips = {
-		/* uart4/sdhc1 */ {
+		/* uart3/sdhc2 */ {
 			.address = 0x38800000,
 			.pin_base = 32,
 			.pin_bitmap = {
-				(1 << (24 + 32 - 32)) | (1 << (29 + 32 - 32))
+				(1 << (23 + 32 - 32)) | (1 << (28 + 32 - 32))
 			},
 		},
 		/* IVSHMEM */ {
diff --git a/configs/arm64/imx8mn.c b/configs/arm64/imx8mn.c
index fd3041a2..91ade7a8 100644
--- a/configs/arm64/imx8mn.c
+++ b/configs/arm64/imx8mn.c
@@ -27,11 +27,11 @@ struct {
 		.revision = JAILHOUSE_CONFIG_REVISION,
 		.flags = JAILHOUSE_SYS_VIRTUAL_DEBUG_CONSOLE,
 		.hypervisor_memory = {
-			.phys_start = 0xb7c00000,
+			.phys_start = 0x77c00000,
 			.size =       0x00400000,
 		},
 		.debug_console = {
-			.address = 0x30890000,
+			.address = 0x30a60000,
 			.size = 0x1000,
 			.flags = JAILHOUSE_CON_TYPE_IMX |
 				 JAILHOUSE_CON_ACCESS_MMIO |
@@ -39,7 +39,7 @@ struct {
 			.type = JAILHOUSE_CON_TYPE_IMX,
 		},
 		.platform_info = {
-			.pci_mmconfig_base = 0xbb800000,
+			.pci_mmconfig_base = 0x7b800000,
 			.pci_mmconfig_end_bus = 0,
 			.pci_is_virtual = 1,
 			.pci_domain = 0,
@@ -68,37 +68,37 @@ struct {
 
 	.mem_regions = {
 		/* IVHSMEM shared memory region for 00:00.0 (demo )*/ {
-			.phys_start = 0xbba00000,
-			.virt_start = 0xbba00000,
+			.phys_start = 0x7ba00000,
+			.virt_start = 0x7ba00000,
 			.size = 0x1000,
 			.flags = JAILHOUSE_MEM_READ,
 		},
 		{
-			.phys_start = 0xbba01000,
-			.virt_start = 0xbba01000,
+			.phys_start = 0x7ba01000,
+			.virt_start = 0x7ba01000,
 			.size = 0x9000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE ,
 		},
 		{
-			.phys_start = 0xbba0a000,
-			.virt_start = 0xbba0a000,
+			.phys_start = 0x7ba0a000,
+			.virt_start = 0x7ba0a000,
 			.size = 0x2000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE ,
 		},
 		{
-			.phys_start = 0xbba0c000,
-			.virt_start = 0xbba0c000,
+			.phys_start = 0x7ba0c000,
+			.virt_start = 0x7ba0c000,
 			.size = 0x2000,
 			.flags = JAILHOUSE_MEM_READ,
 		},
 		{
-			.phys_start = 0xbba0e000,
-			.virt_start = 0xbba0e000,
+			.phys_start = 0x7ba0e000,
+			.virt_start = 0x7ba0e000,
 			.size = 0x2000,
 			.flags = JAILHOUSE_MEM_READ,
 		},
 		/* IVSHMEM shared memory regions for 00:01.0 (networking) */
-		JAILHOUSE_SHMEM_NET_REGIONS(0xbbb00000, 0),
+		JAILHOUSE_SHMEM_NET_REGIONS(0x7bb00000, 0),
 		/* IO */ {
 			.phys_start = 0x00000000,
 			.virt_start = 0x00000000,
@@ -109,41 +109,41 @@ struct {
 		/* RAM 00*/ {
 			.phys_start = 0x40000000,
 			.virt_start = 0x40000000,
-			.size = 0x73c00000,
+			.size = 0x2fc00000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_EXECUTE,
 		},
 		/* Inmate memory */{
-			.phys_start = 0xb3c00000,
-			.virt_start = 0xb3c00000,
+			.phys_start = 0x6fc00000,
+			.virt_start = 0x6fc00000,
 			.size = 0x04000000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_EXECUTE,
 		},
 		/* RAM 01 */ {
-			.phys_start = 0xb8000000,
-			.virt_start = 0xb8000000,
+			.phys_start = 0x78000000,
+			.virt_start = 0x78000000,
 			.size = 0x03700000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_EXECUTE,
 		},
 		/* Loader */{
-			.phys_start = 0xbb700000,
-			.virt_start = 0xbb700000,
+			.phys_start = 0x7b700000,
+			.virt_start = 0x7b700000,
 			.size = 0x100000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_EXECUTE,
 		},
 		/* RAM 02 */ {
-			.phys_start = 0xbbc00000,
-			.virt_start = 0xbbc00000,
+			.phys_start = 0x7bc00000,
+			.virt_start = 0x7bc00000,
 			.size = 0x02400000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
 				JAILHOUSE_MEM_EXECUTE,
 		},
 		/* OP-TEE reserved memory */{
-			.phys_start = 0xbe000000,
-			.virt_start = 0xbe000000,
+			.phys_start = 0x7e000000,
+			.virt_start = 0x7e000000,
 			.size = 0x2000000,
 			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE,
 		},
